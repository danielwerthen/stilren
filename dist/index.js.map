{"version":3,"file":"index.js","sources":["../src/Modifier.ts","../src/Node.ts","../src/default-pseudos.js","../src/index.ts","../src/Parser.ts"],"sourcesContent":["function getClassName(instance: Modifier) {\n  return Reflect.getPrototypeOf(instance).constructor.name;\n}\n\nconst modifiers: { [key: string]: Modifier } = {};\n\nexport type ModifierType = \"prefix\" | \"suffix\";\n\nexport class Modifier {\n  value: string;\n  type: ModifierType;\n  constructor(value: string, type: ModifierType) {\n    const id = `stil-ren-modifier:${getClassName(this)}+${value}`;\n    const mod = modifiers[id];\n    this.value = value;\n    this.type = type;\n    if (mod) {\n      return mod;\n    }\n    modifiers[id] = this;\n  }\n  canCombine(_withMod: Modifier) {\n    return false;\n  }\n  combine(withMod: Modifier): Modifier {\n    throw new Error(\"Cannot combine with \" + getClassName(withMod));\n  }\n  getKey() {\n    return this.value;\n  }\n\n  toString() {\n    return this.getKey();\n  }\n\n  static combineModifiers(mods: Modifier[]) {\n    return mods.reduce<Modifier[]>((sum: Modifier[], item: Modifier) => {\n      const last = sum[sum.length - 1];\n      if (last && last.canCombine(item)) {\n        return [...sum.slice(0, sum.length - 1), last.combine(item)];\n      }\n      return [...sum, item];\n    }, []);\n  }\n}\n\nexport class MediaModifier extends Modifier {\n  constructor(value: string) {\n    super(value, \"prefix\");\n  }\n  canCombine(withMod: Modifier) {\n    return withMod instanceof MediaModifier;\n  }\n  combine(withMod: Modifier): Modifier {\n    const alpha = this;\n    const beta = withMod;\n    if (alpha === beta) {\n      return beta;\n    }\n    const left = alpha.value < beta.value ? alpha : beta;\n    const right = alpha.value < beta.value ? beta : alpha;\n    return new MediaModifier(`${left.value} or ${right.value}`);\n  }\n  getKey() {\n    return `@media ${this.value}`;\n  }\n}\n\nexport class PseudoModifier extends Modifier {\n  constructor(value: string) {\n    super(value, \"suffix\");\n  }\n  canCombine(withMod: Modifier) {\n    return withMod instanceof PseudoModifier;\n  }\n  combine(withMod: Modifier): Modifier {\n    const alpha = this;\n    const beta = withMod;\n    if (alpha === beta) {\n      return beta;\n    }\n    let left: Modifier;\n    let right: Modifier;\n    const aStart = alpha.value.startsWith(\":\");\n    const bStart = beta.value.startsWith(\":\");\n    if (aStart && bStart) {\n      left = alpha.value < beta.value ? alpha : beta;\n      right = alpha.value < beta.value ? beta : alpha;\n    } else if (aStart) {\n      left = beta;\n      right = alpha;\n    } else if (bStart) {\n      left = alpha;\n      right = beta;\n    } else {\n      left = alpha.value < beta.value ? alpha : beta;\n      right = alpha.value < beta.value ? beta : alpha;\n    }\n\n    return new PseudoModifier(`${left.value}:${right.value}`);\n  }\n  getKey() {\n    return `:${this.value}`;\n  }\n}\n","import { Modifier } from \"./Modifier\";\n\ntype Props = { [key: string]: unknown | Props };\n\nfunction getProps(modifier: Modifier, props: Props): Props {\n  if (!(modifier instanceof Modifier)) {\n    throw new Error(\"Cannot get branch of unknown modifier\");\n  }\n  const id = modifier.getKey();\n  if (!props[id]) {\n    props[id] = {};\n  }\n  return props[id] as Props;\n}\n\nexport default class Node {\n  props: { [key: string]: unknown };\n  constructor(props = {}) {\n    this.props = props;\n  }\n  set(key: string, value: unknown, mods: Modifier[]) {\n    const node = mods.reduce((node, mod) => getProps(mod, node), this.props);\n    node[key] = value;\n  }\n  getNode(mods: Modifier[]): Node {\n    if (mods.length < 1) {\n      return this;\n    }\n    const props = mods.reduce((node, mod) => getProps(mod, node), this.props);\n    return new Node(props);\n  }\n}\n","export default {\n  Active: \"active\",\n  Checked: \"checked\",\n  Default: \"default\",\n  Disabled: \"disabled\",\n  Empty: \"empty\",\n  Enabled: \"enabled\",\n  First: \"first\",\n  FirstChild: \"first-child\",\n  FirstOfType: \"first-of-type\",\n  Fullscreen: \"fullscreen\",\n  Focus: \"focus\",\n  Hover: \"hover\",\n  Indeterminate: \"indeterminate\",\n  InRange: \"in-range\",\n  Invalid: \"invalid\",\n  LastChild: \"last-child\",\n  LastOfType: \"last-of-type\",\n  Link: \"link\",\n  OnlyChild: \"only-child\",\n  OnlyOfType: \"only-of-type\",\n  Optional: \"optional\",\n  OutOfRange: \"out-of-range\",\n  ReadOnly: \"read-only\",\n  ReadWrite: \"read-write\",\n  Required: \"required\",\n  Scope: \"scope\",\n  Target: \"target\",\n  Valid: \"valid\",\n  Visited: \"visited\",\n  Before: \":before\",\n  After: \":after\",\n};\n","import {\n  ExtensionProvider,\n  originalCreateElement,\n} from \"@dwerthen/react-extension\";\nimport React from \"react\";\nimport { createParser } from \"./Parser\";\nimport Node from \"./Node\";\nimport defaultPseudos from \"./default-pseudos\";\nimport { PseudoModifier, MediaModifier } from \"./Modifier\";\nimport {\n  StandardEngine,\n  renderDeclarativeRules,\n  StyleObject,\n} from \"styletron-standard\";\n\nexport type StyleProps = { [key: string]: unknown };\n\nexport type RenderStyleFn = (props: StyleProps) => string;\n\nexport function createRenderStyle({\n  mediaPrefixes = {},\n  pseudoSuffixes = defaultPseudos,\n  styletron,\n}: {\n  styletron: StandardEngine;\n  mediaPrefixes?: { [key: string]: string };\n  pseudoSuffixes?: { [key: string]: string };\n}): RenderStyleFn {\n  const parser = createParser(\n    Object.keys(mediaPrefixes).reduce(\n      (sum, key) => ({\n        ...sum,\n        [key]: new MediaModifier(mediaPrefixes[key]),\n      }),\n      {}\n    ),\n    Object.keys(pseudoSuffixes).reduce(\n      (sum, key) => ({\n        ...sum,\n        [key]: new PseudoModifier(pseudoSuffixes[key]),\n      }),\n      {}\n    )\n  );\n\n  function renderStyle(props: StyleProps) {\n    const node = new Node();\n    for (var key in props) {\n      if (props.hasOwnProperty(key)) {\n        const value = props[key];\n        const [inner, mods] = parser(key);\n        node.set(inner, value, mods);\n      }\n    }\n    const tx = renderDeclarativeRules(node.props as StyleObject, styletron);\n    return styletron.renderStyle(tx);\n  }\n\n  return renderStyle;\n}\n\nconst emptyRender = () => \"\";\n\nexport const stilrenContext = React.createContext<{\n  renderStyle: RenderStyleFn;\n}>({\n  renderStyle: emptyRender,\n});\n\nexport function StilrenProvider({\n  mediaPrefixes,\n  pseudoSuffixes,\n  styletron,\n  propPrefix = \"$\",\n  children,\n}: {\n  styletron: StandardEngine;\n  mediaPrefixes?: { [key: string]: string };\n  pseudoSuffixes?: { [key: string]: string };\n  propPrefix?: string;\n  children?: any;\n}) {\n  const renderStyle = React.useMemo(\n    () => createRenderStyle({ styletron, mediaPrefixes, pseudoSuffixes }),\n    []\n  );\n  const extender = React.useMemo(\n    () => createExtender(renderStyle, propPrefix),\n    [renderStyle]\n  );\n  const ctx = React.useMemo(() => ({ renderStyle }), [renderStyle]);\n  return originalCreateElement(\n    stilrenContext.Provider,\n    { value: ctx },\n    originalCreateElement(ExtensionProvider, { value: extender }, children)\n  );\n}\nexport const StilrenConsumer = stilrenContext.Consumer;\n\nexport function useStilren(props: StyleProps) {\n  const { renderStyle } = React.useContext(stilrenContext);\n  if (renderStyle === emptyRender) {\n    console.warn(\"Stilren Provider must be initialized with a renderStyle\");\n  }\n  return renderStyle(props);\n}\n\nexport function createExtender(\n  renderStyle: RenderStyleFn,\n  propPrefix: string = \"$\"\n) {\n  return (_tagName: string, props: { [key: string]: unknown }) => {\n    const output: { [key: string]: unknown } = {};\n    const style: { [key: string]: unknown } = {};\n    let touched = false;\n    for (var key in props) {\n      if (props.hasOwnProperty(key)) {\n        if (key.startsWith(propPrefix)) {\n          style[key.substr(1)] = props[key];\n          touched = true;\n        } else {\n          output[key] = props[key];\n        }\n      }\n    }\n    if (touched) {\n      const className = renderStyle(style);\n      output.className = output.className\n        ? `${output.className} ${className}`\n        : className;\n    }\n    return output;\n  };\n}\n","import { Modifier } from \"./Modifier\";\n\nfunction isUpperCase(str: string): boolean {\n  return str !== str.toLowerCase() && str === str.toUpperCase();\n}\n\nexport type ModifierMap = {\n  [key: string]: Modifier;\n};\n\nfunction cache<T>(fn: (key: string) => T): (key: string) => T {\n  const store: { [key: string]: T } = {};\n  return (key: string) => {\n    if (!store[key]) {\n      store[key] = fn(key);\n    }\n    return store[key];\n  };\n}\n\nexport function createParser(prefixMap: ModifierMap, suffixMap: ModifierMap) {\n  const prefixes = Object.keys(prefixMap);\n  const suffixes = Object.keys(suffixMap);\n\n  function parsePrefix(key: string): [string, Modifier[]] {\n    const match = prefixes.find(item => {\n      return (\n        key.length > item.length &&\n        isUpperCase(key[item.length]) &&\n        key.startsWith(item)\n      );\n    });\n    if (match) {\n      const modifier = prefixMap[match];\n      const [inner, mods] = parsePrefix(\n        key[match.length].toLowerCase() + key.slice(match.length + 1)\n      );\n      return [inner, [...mods, modifier]];\n    }\n    return [key, []];\n  }\n  function parseSuffix(key: string): [string, Modifier[]] {\n    const match = suffixes.find(item => {\n      return key.length > item.length && key.endsWith(item);\n    });\n    if (match) {\n      const modifier = suffixMap[match];\n      const [inner, mods] = parseSuffix(\n        key.substring(0, key.length - match.length)\n      );\n      return [inner, [...mods, modifier]];\n    }\n    return [key, []];\n  }\n  function parse(key: string): [string, Modifier[]] {\n    const [first, prefixMods] = parsePrefix(key);\n    const [innerKey, suffixMods] = parseSuffix(first);\n    return [\n      innerKey,\n      Modifier.combineModifiers([...prefixMods, ...suffixMods])\n    ];\n  }\n  return cache(parse);\n}\n"],"names":["getClassName","instance","Reflect","getPrototypeOf","constructor","name","const","modifiers","Modifier","value","type","id","this","mod","canCombine","_withMod","combine","withMod","Error","getKey","toString","combineModifiers","mods","reduce","sum","item","last","length","slice","MediaModifier","PseudoModifier","left","right","beta","aStart","startsWith","bStart","getProps","modifier","props","Node","set","key","node","getNode","Active","Checked","Default","Disabled","Empty","Enabled","First","FirstChild","FirstOfType","Fullscreen","Focus","Hover","Indeterminate","InRange","Invalid","LastChild","LastOfType","Link","OnlyChild","OnlyOfType","Optional","OutOfRange","ReadOnly","ReadWrite","Required","Scope","Target","Valid","Visited","Before","After","createRenderStyle","defaultPseudos","prefixMap","suffixMap","fn","store","prefixes","suffixes","parser","Object","keys","mediaPrefixes","pseudoSuffixes","parsePrefix","match","find","str","toLowerCase","toUpperCase","parseSuffix","endsWith","substring","prefixMods","hasOwnProperty","tx","renderDeclarativeRules","styletron","renderStyle","emptyRender","stilrenContext","React","createContext","StilrenConsumer","Consumer","createExtender","propPrefix","_tagName","output","style","touched","substr","className","useMemo","extender","ctx","originalCreateElement","Provider","ExtensionProvider","children","useContext","console","warn"],"mappings":"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"}