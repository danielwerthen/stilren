import '../';
import BaseReact, { AbstractView, AllHTMLAttributes, AnchorHTMLAttributes, AnimationEvent, AnimationEventHandler, AreaHTMLAttributes, AriaAttributes, Attributes, AudioHTMLAttributes, BaseHTMLAttributes, BaseSyntheticEvent, BlockquoteHTMLAttributes, ButtonHTMLAttributes, CElement, CFactory, CSSProperties, CanvasHTMLAttributes, ChangeEvent, ChangeEventHandler, ChildContextProvider, Children, ClassAttributes, ClassType, ClassicComponent, ClassicComponentClass, ClassicElement, ClassicFactory, ClipboardEvent, ClipboardEventHandler, ColHTMLAttributes, ColgroupHTMLAttributes, Component, ComponentClass, ComponentElement, ComponentFactory, ComponentLifecycle, ComponentProps, ComponentPropsWithRef, ComponentPropsWithoutRef, ComponentSpec, ComponentState, ComponentType, CompositionEvent, CompositionEventHandler, Consumer, ConsumerProps, Context, ContextType, DOMAttributes, DOMElement, DOMFactory, DataHTMLAttributes, DelHTMLAttributes, DependencyList, DeprecatedLifecycle, DetailedHTMLFactory, DetailedHTMLProps, DetailedReactHTMLElement, DetailsHTMLAttributes, DialogHTMLAttributes, Dispatch, DispatchWithoutAction, DragEvent, DragEventHandler, EffectCallback, ElementRef, ElementType, EmbedHTMLAttributes, ErrorInfo, EventHandler, ExoticComponent, FC, Factory, FieldsetHTMLAttributes, FocusEvent, FocusEventHandler, FormEvent, FormEventHandler, FormHTMLAttributes, ForwardRefExoticComponent, ForwardRefRenderFunction, ForwardedRef, Fragment, FunctionComponent, FunctionComponentElement, FunctionComponentFactory, GetDerivedStateFromError, GetDerivedStateFromProps, HTMLAttributeReferrerPolicy, HTMLAttributes, HTMLFactory, HTMLProps, HtmlHTMLAttributes, IframeHTMLAttributes, ImgHTMLAttributes, InputHTMLAttributes, InsHTMLAttributes, InvalidEvent, JSXElementConstructor, Key, KeyboardEvent, KeyboardEventHandler, KeygenHTMLAttributes, LabelHTMLAttributes, LazyExoticComponent, LegacyRef, LiHTMLAttributes, LinkHTMLAttributes, MapHTMLAttributes, MediaHTMLAttributes, MemoExoticComponent, MenuHTMLAttributes, MetaHTMLAttributes, MeterHTMLAttributes, Mixin, MouseEvent, MouseEventHandler, MutableRefObject, NamedExoticComponent, NewLifecycle, ObjectHTMLAttributes, OlHTMLAttributes, OptgroupHTMLAttributes, OptionHTMLAttributes, OutputHTMLAttributes, ParamHTMLAttributes, PointerEvent, PointerEventHandler, Profiler, ProfilerOnRenderCallback, ProfilerProps, ProgressHTMLAttributes, Props, PropsWithChildren, PropsWithRef, PropsWithoutRef, Provider, ProviderExoticComponent, ProviderProps, PureComponent, QuoteHTMLAttributes, ReactChild, ReactChildren, ReactComponentElement, ReactDOM, ReactElement, ReactEventHandler, ReactFragment, ReactHTML, ReactHTMLElement, ReactInstance, ReactNode, ReactNodeArray, ReactPortal, ReactPropTypes, ReactSVG, ReactSVGElement, ReactText, ReactType, Reducer, ReducerAction, ReducerState, ReducerStateWithoutAction, ReducerWithoutAction, Ref, RefAttributes, RefCallback, RefForwardingComponent, RefObject, Requireable, SFC, SFCElement, SFCFactory, SVGAttributes, SVGFactory, SVGProps, ScriptHTMLAttributes, SelectHTMLAttributes, SetStateAction, SlotHTMLAttributes, SourceHTMLAttributes, StatelessComponent, StaticLifecycle, StrictMode, StyleHTMLAttributes, Suspense, SuspenseProps, SyntheticEvent, TableHTMLAttributes, TdHTMLAttributes, TextareaHTMLAttributes, ThHTMLAttributes, TimeHTMLAttributes, Touch, TouchEvent, TouchEventHandler, TouchList, TrackHTMLAttributes, TransitionEvent, TransitionEventHandler, UIEvent, UIEventHandler, VFC, ValidationMap, Validator, VideoHTMLAttributes, VoidFunctionComponent, WeakValidationMap, WebViewHTMLAttributes, WheelEvent, WheelEventHandler, cloneElement, createContext, createFactory, createRef, forwardRef, isValidElement, lazy, memo, useCallback, useContext, useDebugValue, useEffect, useImperativeHandle, useLayoutEffect, useMemo, useReducer, useRef, useState, version } from 'base-react';
import { createElement } from './createElement';
declare const React: {
    createElement: typeof createElement;
    createFactory<T extends HTMLElement>(type: "object" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | "caption" | "cite" | "code" | "col" | "colgroup" | "data" | "datalist" | "dd" | "del" | "details" | "dfn" | "dialog" | "div" | "dl" | "dt" | "em" | "embed" | "fieldset" | "figcaption" | "figure" | "footer" | "form" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "head" | "header" | "hgroup" | "hr" | "html" | "i" | "iframe" | "img" | "input" | "ins" | "kbd" | "keygen" | "label" | "legend" | "li" | "link" | "main" | "map" | "mark" | "menu" | "menuitem" | "meta" | "meter" | "nav" | "noscript" | "ol" | "optgroup" | "option" | "output" | "p" | "param" | "picture" | "pre" | "progress" | "q" | "rp" | "rt" | "ruby" | "s" | "samp" | "slot" | "script" | "section" | "select" | "small" | "source" | "span" | "strong" | "style" | "sub" | "summary" | "sup" | "table" | "template" | "tbody" | "td" | "textarea" | "tfoot" | "th" | "thead" | "time" | "title" | "tr" | "track" | "u" | "ul" | "var" | "video" | "wbr" | "webview"): BaseReact.HTMLFactory<T>;
    createFactory(type: "symbol" | "animate" | "circle" | "clipPath" | "defs" | "desc" | "ellipse" | "feBlend" | "feColorMatrix" | "feComponentTransfer" | "feComposite" | "feConvolveMatrix" | "feDiffuseLighting" | "feDisplacementMap" | "feDistantLight" | "feDropShadow" | "feFlood" | "feFuncA" | "feFuncB" | "feFuncG" | "feFuncR" | "feGaussianBlur" | "feImage" | "feMerge" | "feMergeNode" | "feMorphology" | "feOffset" | "fePointLight" | "feSpecularLighting" | "feSpotLight" | "feTile" | "feTurbulence" | "filter" | "foreignObject" | "g" | "image" | "line" | "linearGradient" | "marker" | "mask" | "metadata" | "path" | "pattern" | "polygon" | "polyline" | "radialGradient" | "rect" | "stop" | "svg" | "switch" | "text" | "textPath" | "tspan" | "use" | "view"): BaseReact.SVGFactory;
    createFactory<P extends BaseReact.DOMAttributes<T_1>, T_1 extends Element>(type: string): BaseReact.DOMFactory<P, T_1>;
    createFactory<P_1>(type: BaseReact.FunctionComponent<P_1>): BaseReact.FunctionComponentFactory<P_1>;
    createFactory<P_2>(type: BaseReact.ClassType<P_2, BaseReact.ClassicComponent<P_2, any>, BaseReact.ClassicComponentClass<P_2>>): BaseReact.ComponentFactory<P_2, BaseReact.ClassicComponent<P_2, any>>;
    createFactory<P_3, T_2 extends BaseReact.Component<P_3, any, any>, C extends BaseReact.ComponentClass<P_3, any>>(type: BaseReact.ClassType<P_3, T_2, C>): BaseReact.ComponentFactory<P_3, T_2>;
    createFactory<P_4>(type: BaseReact.ComponentClass<P_4, any>): BaseReact.Factory<P_4>;
    cloneElement<P_5 extends BaseReact.HTMLAttributes<T_3>, T_3 extends HTMLElement>(element: BaseReact.DetailedReactHTMLElement<P_5, T_3>, props?: P_5 | undefined, ...children: BaseReact.ReactNode[]): BaseReact.DetailedReactHTMLElement<P_5, T_3>;
    cloneElement<P_6 extends BaseReact.HTMLAttributes<T_4>, T_4 extends HTMLElement>(element: BaseReact.ReactHTMLElement<T_4>, props?: P_6 | undefined, ...children: BaseReact.ReactNode[]): BaseReact.ReactHTMLElement<T_4>;
    cloneElement<P_7 extends BaseReact.SVGAttributes<T_5>, T_5 extends SVGElement>(element: BaseReact.ReactSVGElement, props?: P_7 | undefined, ...children: BaseReact.ReactNode[]): BaseReact.ReactSVGElement;
    cloneElement<P_8 extends BaseReact.DOMAttributes<T_6>, T_6 extends Element>(element: BaseReact.DOMElement<P_8, T_6>, props?: (BaseReact.DOMAttributes<T_6> & P_8) | undefined, ...children: BaseReact.ReactNode[]): BaseReact.DOMElement<P_8, T_6>;
    cloneElement<P_9>(element: BaseReact.FunctionComponentElement<P_9>, props?: (Partial<P_9> & BaseReact.Attributes) | undefined, ...children: BaseReact.ReactNode[]): BaseReact.FunctionComponentElement<P_9>;
    cloneElement<P_10, T_7 extends BaseReact.Component<P_10, any, any>>(element: BaseReact.CElement<P_10, T_7>, props?: (Partial<P_10> & BaseReact.ClassAttributes<T_7>) | undefined, ...children: BaseReact.ReactNode[]): BaseReact.CElement<P_10, T_7>;
    cloneElement<P_11>(element: BaseReact.ReactElement<P_11, string | ((props: any) => BaseReact.ReactElement<any, any> | null) | (new (props: any) => BaseReact.Component<any, any, any>)>, props?: (Partial<P_11> & BaseReact.Attributes) | undefined, ...children: BaseReact.ReactNode[]): BaseReact.ReactElement<P_11, string | ((props: any) => BaseReact.ReactElement<any, any> | null) | (new (props: any) => BaseReact.Component<any, any, any>)>;
    createContext<T_8>(defaultValue: T_8): BaseReact.Context<T_8>;
    isValidElement<P_12>(object: {} | null | undefined): object is BaseReact.ReactElement<P_12, string | ((props: any) => BaseReact.ReactElement<any, any> | null) | (new (props: any) => BaseReact.Component<any, any, any>)>;
    createRef<T_9>(): BaseReact.RefObject<T_9>;
    forwardRef<T_10, P_13 = {}>(render: BaseReact.ForwardRefRenderFunction<T_10, P_13>): BaseReact.ForwardRefExoticComponent<BaseReact.PropsWithoutRef<P_13> & BaseReact.RefAttributes<T_10>>;
    memo<P_14 extends object>(Component: BaseReact.SFC<P_14>, propsAreEqual?: ((prevProps: Readonly<BaseReact.PropsWithChildren<P_14>>, nextProps: Readonly<BaseReact.PropsWithChildren<P_14>>) => boolean) | undefined): BaseReact.NamedExoticComponent<P_14>;
    memo<T_11 extends BaseReact.ComponentType<any>>(Component: T_11, propsAreEqual?: ((prevProps: Readonly<BaseReact.ComponentProps<T_11>>, nextProps: Readonly<BaseReact.ComponentProps<T_11>>) => boolean) | undefined): BaseReact.MemoExoticComponent<T_11>;
    lazy<T_12 extends BaseReact.ComponentType<any>>(factory: () => Promise<{
        default: T_12;
    }>): BaseReact.LazyExoticComponent<T_12>;
    useContext<T_13>(context: BaseReact.Context<T_13>): T_13;
    useState<S>(initialState: S | (() => S)): [S, BaseReact.Dispatch<BaseReact.SetStateAction<S>>];
    useState<S_1 = undefined>(): [S_1 | undefined, BaseReact.Dispatch<BaseReact.SetStateAction<S_1 | undefined>>];
    useReducer<R extends BaseReact.ReducerWithoutAction<any>, I>(reducer: R, initializerArg: I, initializer: (arg: I) => BaseReact.ReducerStateWithoutAction<R>): [BaseReact.ReducerStateWithoutAction<R>, BaseReact.DispatchWithoutAction];
    useReducer<R_1 extends BaseReact.ReducerWithoutAction<any>>(reducer: R_1, initializerArg: BaseReact.ReducerStateWithoutAction<R_1>, initializer?: undefined): [BaseReact.ReducerStateWithoutAction<R_1>, BaseReact.DispatchWithoutAction];
    useReducer<R_2 extends BaseReact.Reducer<any, any>, I_1>(reducer: R_2, initializerArg: I_1 & BaseReact.ReducerState<R_2>, initializer: (arg: I_1 & BaseReact.ReducerState<R_2>) => BaseReact.ReducerState<R_2>): [BaseReact.ReducerState<R_2>, BaseReact.Dispatch<BaseReact.ReducerAction<R_2>>];
    useReducer<R_3 extends BaseReact.Reducer<any, any>, I_2>(reducer: R_3, initializerArg: I_2, initializer: (arg: I_2) => BaseReact.ReducerState<R_3>): [BaseReact.ReducerState<R_3>, BaseReact.Dispatch<BaseReact.ReducerAction<R_3>>];
    useReducer<R_4 extends BaseReact.Reducer<any, any>>(reducer: R_4, initialState: BaseReact.ReducerState<R_4>, initializer?: undefined): [BaseReact.ReducerState<R_4>, BaseReact.Dispatch<BaseReact.ReducerAction<R_4>>];
    useRef<T_14>(initialValue: T_14): BaseReact.MutableRefObject<T_14>;
    useRef<T_15>(initialValue: T_15 | null): BaseReact.RefObject<T_15>;
    useRef<T_16 = undefined>(): BaseReact.MutableRefObject<T_16 | undefined>;
    useLayoutEffect(effect: BaseReact.EffectCallback, deps?: BaseReact.DependencyList | undefined): void;
    useEffect(effect: BaseReact.EffectCallback, deps?: BaseReact.DependencyList | undefined): void;
    useImperativeHandle<T_17, R_5 extends T_17>(ref: ((instance: T_17 | null) => void) | BaseReact.RefObject<T_17> | null | undefined, init: () => R_5, deps?: BaseReact.DependencyList | undefined): void;
    useCallback<T_18 extends (...args: any[]) => any>(callback: T_18, deps: BaseReact.DependencyList): T_18;
    useMemo<T_19>(factory: () => T_19, deps: BaseReact.DependencyList | undefined): T_19;
    useDebugValue<T_20>(value: T_20, format?: ((value: T_20) => any) | undefined): void;
    Children: BaseReact.ReactChildren;
    Fragment: BaseReact.ExoticComponent<{
        children?: BaseReact.ReactNode;
    }>;
    StrictMode: BaseReact.ExoticComponent<{
        children?: BaseReact.ReactNode;
    }>;
    Suspense: BaseReact.ExoticComponent<BaseReact.SuspenseProps>;
    version: string;
    Profiler: BaseReact.ExoticComponent<BaseReact.ProfilerProps>;
    Component: typeof BaseReact.Component;
    PureComponent: typeof BaseReact.PureComponent;
};
export default React;
export { AbstractView, AllHTMLAttributes, AnchorHTMLAttributes, AnimationEvent, AnimationEventHandler, AreaHTMLAttributes, AriaAttributes, Attributes, AudioHTMLAttributes, BaseHTMLAttributes, BaseSyntheticEvent, BlockquoteHTMLAttributes, ButtonHTMLAttributes, CElement, CFactory, CSSProperties, CanvasHTMLAttributes, ChangeEvent, ChangeEventHandler, ChildContextProvider, Children, ClassAttributes, ClassType, ClassicComponent, ClassicComponentClass, ClassicElement, ClassicFactory, ClipboardEvent, ClipboardEventHandler, ColHTMLAttributes, ColgroupHTMLAttributes, Component, ComponentClass, ComponentElement, ComponentFactory, ComponentLifecycle, ComponentProps, ComponentPropsWithRef, ComponentPropsWithoutRef, ComponentSpec, ComponentState, ComponentType, CompositionEvent, CompositionEventHandler, Consumer, ConsumerProps, Context, ContextType, DOMAttributes, DOMElement, DOMFactory, DataHTMLAttributes, DelHTMLAttributes, DependencyList, DeprecatedLifecycle, DetailedHTMLFactory, DetailedHTMLProps, DetailedReactHTMLElement, DetailsHTMLAttributes, DialogHTMLAttributes, Dispatch, DispatchWithoutAction, DragEvent, DragEventHandler, EffectCallback, ElementRef, ElementType, EmbedHTMLAttributes, ErrorInfo, EventHandler, ExoticComponent, FC, Factory, FieldsetHTMLAttributes, FocusEvent, FocusEventHandler, FormEvent, FormEventHandler, FormHTMLAttributes, ForwardRefExoticComponent, ForwardRefRenderFunction, ForwardedRef, Fragment, FunctionComponent, FunctionComponentElement, FunctionComponentFactory, GetDerivedStateFromError, GetDerivedStateFromProps, HTMLAttributeReferrerPolicy, HTMLAttributes, HTMLFactory, HTMLProps, HtmlHTMLAttributes, IframeHTMLAttributes, ImgHTMLAttributes, InputHTMLAttributes, InsHTMLAttributes, InvalidEvent, JSXElementConstructor, Key, KeyboardEvent, KeyboardEventHandler, KeygenHTMLAttributes, LabelHTMLAttributes, LazyExoticComponent, LegacyRef, LiHTMLAttributes, LinkHTMLAttributes, MapHTMLAttributes, MediaHTMLAttributes, MemoExoticComponent, MenuHTMLAttributes, MetaHTMLAttributes, MeterHTMLAttributes, Mixin, MouseEvent, MouseEventHandler, MutableRefObject, NamedExoticComponent, NewLifecycle, ObjectHTMLAttributes, OlHTMLAttributes, OptgroupHTMLAttributes, OptionHTMLAttributes, OutputHTMLAttributes, ParamHTMLAttributes, PointerEvent, PointerEventHandler, Profiler, ProfilerOnRenderCallback, ProfilerProps, ProgressHTMLAttributes, Props, PropsWithChildren, PropsWithRef, PropsWithoutRef, Provider, ProviderExoticComponent, ProviderProps, PureComponent, QuoteHTMLAttributes, ReactChild, ReactChildren, ReactComponentElement, ReactDOM, ReactElement, ReactEventHandler, ReactFragment, ReactHTML, ReactHTMLElement, ReactInstance, ReactNode, ReactNodeArray, ReactPortal, ReactPropTypes, ReactSVG, ReactSVGElement, ReactText, ReactType, Reducer, ReducerAction, ReducerState, ReducerStateWithoutAction, ReducerWithoutAction, Ref, RefAttributes, RefCallback, RefForwardingComponent, RefObject, Requireable, SFC, SFCElement, SFCFactory, SVGAttributes, SVGFactory, SVGProps, ScriptHTMLAttributes, SelectHTMLAttributes, SetStateAction, SlotHTMLAttributes, SourceHTMLAttributes, StatelessComponent, StaticLifecycle, StrictMode, StyleHTMLAttributes, Suspense, SuspenseProps, SyntheticEvent, TableHTMLAttributes, TdHTMLAttributes, TextareaHTMLAttributes, ThHTMLAttributes, TimeHTMLAttributes, Touch, TouchEvent, TouchEventHandler, TouchList, TrackHTMLAttributes, TransitionEvent, TransitionEventHandler, UIEvent, UIEventHandler, VFC, ValidationMap, Validator, VideoHTMLAttributes, VoidFunctionComponent, WeakValidationMap, WebViewHTMLAttributes, WheelEvent, WheelEventHandler, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, useCallback, useContext, useDebugValue, useEffect, useImperativeHandle, useLayoutEffect, useMemo, useReducer, useRef, useState, version, };
export { jsx } from './jsx';
export { getStylesheets, initialize } from './stilren';
export declare const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: any;
