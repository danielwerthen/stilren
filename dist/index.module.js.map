{"version":3,"file":"index.module.js","sources":["../src/Modifier.ts","../src/Node.ts","../src/default-pseudos.js","../src/index.ts","../src/Parser.ts"],"sourcesContent":["function getClassName(instance: Modifier) {\n  return Reflect.getPrototypeOf(instance).constructor.name;\n}\n\nconst modifiers: { [key: string]: Modifier } = {};\n\nexport type ModifierType = \"prefix\" | \"suffix\";\n\nexport class Modifier {\n  value: string;\n  type: ModifierType;\n  constructor(value: string, type: ModifierType) {\n    const id = `stil-ren-modifier:${getClassName(this)}+${value}`;\n    const mod = modifiers[id];\n    this.value = value;\n    this.type = type;\n    if (mod) {\n      return mod;\n    }\n    modifiers[id] = this;\n  }\n  canCombine(_withMod: Modifier) {\n    return false;\n  }\n  combine(withMod: Modifier): Modifier {\n    throw new Error(\"Cannot combine with \" + getClassName(withMod));\n  }\n  getKey() {\n    return this.value;\n  }\n\n  toString() {\n    return this.getKey();\n  }\n\n  static combineModifiers(mods: Modifier[]) {\n    return mods.reduce<Modifier[]>((sum: Modifier[], item: Modifier) => {\n      const last = sum[sum.length - 1];\n      if (last && last.canCombine(item)) {\n        return [...sum.slice(0, sum.length - 1), last.combine(item)];\n      }\n      return [...sum, item];\n    }, []);\n  }\n}\n\nexport class MediaModifier extends Modifier {\n  constructor(value: string) {\n    super(value, \"prefix\");\n  }\n  canCombine(withMod: Modifier) {\n    return withMod instanceof MediaModifier;\n  }\n  combine(withMod: Modifier): Modifier {\n    const alpha = this;\n    const beta = withMod;\n    if (alpha === beta) {\n      return beta;\n    }\n    const left = alpha.value < beta.value ? alpha : beta;\n    const right = alpha.value < beta.value ? beta : alpha;\n    return new MediaModifier(`${left.value} or ${right.value}`);\n  }\n  getKey() {\n    return `@media ${this.value}`;\n  }\n}\n\nexport class PseudoModifier extends Modifier {\n  constructor(value: string) {\n    super(value, \"suffix\");\n  }\n  canCombine(withMod: Modifier) {\n    return withMod instanceof PseudoModifier;\n  }\n  combine(withMod: Modifier): Modifier {\n    const alpha = this;\n    const beta = withMod;\n    if (alpha === beta) {\n      return beta;\n    }\n    let left: Modifier;\n    let right: Modifier;\n    const aStart = alpha.value.startsWith(\":\");\n    const bStart = beta.value.startsWith(\":\");\n    if (aStart && bStart) {\n      left = alpha.value < beta.value ? alpha : beta;\n      right = alpha.value < beta.value ? beta : alpha;\n    } else if (aStart) {\n      left = beta;\n      right = alpha;\n    } else if (bStart) {\n      left = alpha;\n      right = beta;\n    } else {\n      left = alpha.value < beta.value ? alpha : beta;\n      right = alpha.value < beta.value ? beta : alpha;\n    }\n\n    return new PseudoModifier(`${left.value}:${right.value}`);\n  }\n  getKey() {\n    return `:${this.value}`;\n  }\n}\n","import { Modifier } from \"./Modifier\";\n\ntype Props = { [key: string]: unknown | Props };\n\nfunction getProps(modifier: Modifier, props: Props): Props {\n  if (!(modifier instanceof Modifier)) {\n    throw new Error(\"Cannot get branch of unknown modifier\");\n  }\n  const id = modifier.getKey();\n  if (!props[id]) {\n    props[id] = {};\n  }\n  return props[id] as Props;\n}\n\nexport default class Node {\n  props: { [key: string]: unknown };\n  constructor(props = {}) {\n    this.props = props;\n  }\n  set(key: string, value: unknown, mods: Modifier[]) {\n    const node = mods.reduce((node, mod) => getProps(mod, node), this.props);\n    node[key] = value;\n  }\n  getNode(mods: Modifier[]): Node {\n    if (mods.length < 1) {\n      return this;\n    }\n    const props = mods.reduce((node, mod) => getProps(mod, node), this.props);\n    return new Node(props);\n  }\n}\n","export default {\n  Active: \"active\",\n  Checked: \"checked\",\n  Default: \"default\",\n  Disabled: \"disabled\",\n  Empty: \"empty\",\n  Enabled: \"enabled\",\n  First: \"first\",\n  FirstChild: \"first-child\",\n  FirstOfType: \"first-of-type\",\n  Fullscreen: \"fullscreen\",\n  Focus: \"focus\",\n  Hover: \"hover\",\n  Indeterminate: \"indeterminate\",\n  InRange: \"in-range\",\n  Invalid: \"invalid\",\n  LastChild: \"last-child\",\n  LastOfType: \"last-of-type\",\n  Link: \"link\",\n  OnlyChild: \"only-child\",\n  OnlyOfType: \"only-of-type\",\n  Optional: \"optional\",\n  OutOfRange: \"out-of-range\",\n  ReadOnly: \"read-only\",\n  ReadWrite: \"read-write\",\n  Required: \"required\",\n  Scope: \"scope\",\n  Target: \"target\",\n  Valid: \"valid\",\n  Visited: \"visited\",\n  Before: \":before\",\n  After: \":after\",\n};\n","import \"@dwerthen/react-extension/react\";\nimport { registerExtension } from \"@dwerthen/react-extension\";\nimport { createParser } from \"./Parser\";\nimport Node from \"./Node\";\nimport defaultPseudos from \"./default-pseudos\";\nimport { PseudoModifier, MediaModifier } from \"./Modifier\";\nimport {\n  StandardEngine,\n  renderDeclarativeRules,\n  StyleObject,\n} from \"styletron-standard\";\n\nexport type StyleProps = { [key: string]: unknown };\n\nexport type RenderStyleFn = (props: StyleProps) => string;\n\nexport function createRenderStyle({\n  mediaPrefixes = {},\n  pseudoSuffixes = defaultPseudos,\n  styletron,\n}: {\n  styletron: StandardEngine;\n  mediaPrefixes?: { [key: string]: string };\n  pseudoSuffixes?: { [key: string]: string };\n}): RenderStyleFn {\n  const parser = createParser(\n    Object.keys(mediaPrefixes).reduce(\n      (sum, key) => ({\n        ...sum,\n        [key]: new MediaModifier(mediaPrefixes[key]),\n      }),\n      {}\n    ),\n    Object.keys(pseudoSuffixes).reduce(\n      (sum, key) => ({\n        ...sum,\n        [key]: new PseudoModifier(pseudoSuffixes[key]),\n      }),\n      {}\n    )\n  );\n\n  function renderStyle(props: StyleProps) {\n    const node = new Node();\n    for (var key in props) {\n      if (props.hasOwnProperty(key)) {\n        const value = props[key];\n        const [inner, mods] = parser(key);\n        node.set(inner, value, mods);\n      }\n    }\n    const tx = renderDeclarativeRules(node.props as StyleObject, styletron);\n    return styletron.renderStyle(tx);\n  }\n\n  return renderStyle;\n}\n\nexport type StilrenOptions = {\n  styletron: StandardEngine;\n  mediaPrefixes?: { [key: string]: string };\n  pseudoSuffixes?: { [key: string]: string };\n  propPrefix?: string;\n};\n\nexport function registerStilren({\n  mediaPrefixes,\n  pseudoSuffixes,\n  styletron,\n  propPrefix = \"$\",\n}: StilrenOptions) {\n  const renderStyle = createRenderStyle({\n    styletron,\n    mediaPrefixes,\n    pseudoSuffixes,\n  });\n  registerExtension((tagName, props: any, ...children) => {\n    if (typeof props !== \"object\") {\n      return [tagName, props, children];\n    }\n    const output: { [key: string]: unknown } = {};\n    const style: { [key: string]: unknown } = {};\n    let touched = false;\n    for (var key in props) {\n      if (props.hasOwnProperty(key)) {\n        if (key.startsWith(propPrefix)) {\n          style[key.substr(1)] = props[key];\n          touched = true;\n        } else {\n          output[key] = props[key];\n        }\n      }\n    }\n    if (touched) {\n      const className = renderStyle(style);\n      output.className = output.className\n        ? `${output.className} ${className}`\n        : className;\n    }\n    return [tagName, output, children];\n  });\n}\n","import { Modifier } from \"./Modifier\";\n\nfunction isUpperCase(str: string): boolean {\n  return str !== str.toLowerCase() && str === str.toUpperCase();\n}\n\nexport type ModifierMap = {\n  [key: string]: Modifier;\n};\n\nfunction cache<T>(fn: (key: string) => T): (key: string) => T {\n  const store: { [key: string]: T } = {};\n  return (key: string) => {\n    if (!store[key]) {\n      store[key] = fn(key);\n    }\n    return store[key];\n  };\n}\n\nexport function createParser(prefixMap: ModifierMap, suffixMap: ModifierMap) {\n  const prefixes = Object.keys(prefixMap);\n  const suffixes = Object.keys(suffixMap);\n\n  function parsePrefix(key: string): [string, Modifier[]] {\n    const match = prefixes.find(item => {\n      return (\n        key.length > item.length &&\n        isUpperCase(key[item.length]) &&\n        key.startsWith(item)\n      );\n    });\n    if (match) {\n      const modifier = prefixMap[match];\n      const [inner, mods] = parsePrefix(\n        key[match.length].toLowerCase() + key.slice(match.length + 1)\n      );\n      return [inner, [...mods, modifier]];\n    }\n    return [key, []];\n  }\n  function parseSuffix(key: string): [string, Modifier[]] {\n    const match = suffixes.find(item => {\n      return key.length > item.length && key.endsWith(item);\n    });\n    if (match) {\n      const modifier = suffixMap[match];\n      const [inner, mods] = parseSuffix(\n        key.substring(0, key.length - match.length)\n      );\n      return [inner, [...mods, modifier]];\n    }\n    return [key, []];\n  }\n  function parse(key: string): [string, Modifier[]] {\n    const [first, prefixMods] = parsePrefix(key);\n    const [innerKey, suffixMods] = parseSuffix(first);\n    return [\n      innerKey,\n      Modifier.combineModifiers([...prefixMods, ...suffixMods])\n    ];\n  }\n  return cache(parse);\n}\n"],"names":["getClassName","instance","Reflect","getPrototypeOf","constructor","name","modifiers","Modifier","value","type","id","this","mod","canCombine","_withMod","combine","withMod","Error","getKey","toString","[object Object]","mods","reduce","sum","item","last","length","slice","MediaModifier","super","PseudoModifier","beta","left","right","aStart","startsWith","bStart","getProps","modifier","props","Node","set","key","node","getNode","Active","Checked","Default","Disabled","Empty","Enabled","First","FirstChild","FirstOfType","Fullscreen","Focus","Hover","Indeterminate","InRange","Invalid","LastChild","LastOfType","Link","OnlyChild","OnlyOfType","Optional","OutOfRange","ReadOnly","ReadWrite","Required","Scope","Target","Valid","Visited","Before","After","createRenderStyle","mediaPrefixes","pseudoSuffixes","defaultPseudos","styletron","parser","prefixMap","suffixMap","prefixes","Object","keys","suffixes","fn","store","first","prefixMods","parsePrefix","match","find","str","toLowerCase","toUpperCase","inner","innerKey","suffixMods","parseSuffix","endsWith","substring","combineModifiers","cache","createParser","hasOwnProperty","tx","renderDeclarativeRules","renderStyle","registerStilren","propPrefix","registerExtension","tagName","children","output","style","touched","substr","className"],"mappings":"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"}