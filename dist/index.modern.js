import"@dwerthen/react-extension/react";import{registerExtension as e}from"@dwerthen/react-extension";import{renderDeclarativeRules as t}from"styletron-standard";function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function r(e){return Reflect.getPrototypeOf(e).constructor.name}const i={};class s{constructor(e,t){const n=`stil-ren-modifier:${r(this)}+${e}`,s=i[n];if(this.value=e,this.type=t,s)return s;i[n]=this}canCombine(e){return!1}combine(e){throw new Error("Cannot combine with "+r(e))}getKey(){return this.value}toString(){return this.getKey()}static combineModifiers(e){return e.reduce((e,t)=>{const n=e[e.length-1];return n&&n.canCombine(t)?[...e.slice(0,e.length-1),n.combine(t)]:[...e,t]},[])}}class o extends s{constructor(e){super(e,"prefix")}canCombine(e){return e instanceof o}combine(e){return this===e?e:new o(`${(this.value<e.value?this:e).value} or ${(this.value<e.value?e:this).value}`)}getKey(){return"@media "+this.value}}class a extends s{constructor(e){super(e,"suffix")}canCombine(e){return e instanceof a}combine(e){const t=e;if(this===t)return t;let n,r;const i=this.value.startsWith(":"),s=t.value.startsWith(":");return i&&s?(n=this.value<t.value?this:t,r=this.value<t.value?t:this):i?(n=t,r=this):s?(n=this,r=t):(n=this.value<t.value?this:t,r=this.value<t.value?t:this),new a(`${n.value}:${r.value}`)}getKey(){return":"+this.value}}function c(e,t){if(!(e instanceof s))throw new Error("Cannot get branch of unknown modifier");const n=e.getKey();return t[n]||(t[n]={}),t[n]}class u{constructor(e={}){this.props=e}set(e,t,n){n.reduce((e,t)=>c(t,e),this.props)[e]=t}getNode(e){if(e.length<1)return this;const t=e.reduce((e,t)=>c(t,e),this.props);return new u(t)}}var l={Active:"active",Checked:"checked",Default:"default",Disabled:"disabled",Empty:"empty",Enabled:"enabled",First:"first",FirstChild:"first-child",FirstOfType:"first-of-type",Fullscreen:"fullscreen",Focus:"focus",Hover:"hover",Indeterminate:"indeterminate",InRange:"in-range",Invalid:"invalid",LastChild:"last-child",LastOfType:"last-of-type",Link:"link",OnlyChild:"only-child",OnlyOfType:"only-of-type",Optional:"optional",OutOfRange:"out-of-range",ReadOnly:"read-only",ReadWrite:"read-write",Required:"required",Scope:"scope",Target:"target",Valid:"valid",Visited:"visited",Before:":before",After:":after"};function f({mediaPrefixes:e={},pseudoSuffixes:r=l,styletron:i}){const c=function(e,t){const n=Object.keys(e),r=Object.keys(t);return function(i){const o={};return i=>(o[i]||(o[i]=function(i){const[o,a]=function t(r){const i=n.find(e=>{return r.length>e.length&&(t=r[e.length])!==t.toLowerCase()&&t===t.toUpperCase()&&r.startsWith(e);var t});if(i){const n=e[i],[s,o]=t(r[i.length].toLowerCase()+r.slice(i.length+1));return[s,[...o,n]]}return[r,[]]}(i),[c,u]=function e(n){const i=r.find(e=>n.length>e.length&&n.endsWith(e));if(i){const r=t[i],[s,o]=e(n.substring(0,n.length-i.length));return[s,[...o,r]]}return[n,[]]}(o);return[c,s.combineModifiers([...a,...u])]}(i)),o[i])}()}(Object.keys(e).reduce((t,r)=>n({},t,{[r]:new o(e[r])}),{}),Object.keys(r).reduce((e,t)=>n({},e,{[t]:new a(r[t])}),{}));return function(e){const n=new u;for(var r in e)if(e.hasOwnProperty(r)){const t=e[r],[i,s]=c(r);n.set(i,t,s)}const s=t(n.props,i);return i.renderStyle(s)}}let h=null;function d({mediaPrefixes:t,pseudoSuffixes:n,styletron:r,propPrefix:i="$"}){const s=f({styletron:r,mediaPrefixes:t,pseudoSuffixes:n});return h=s,e((e,t,...n)=>{if("object"!=typeof t||"string"!=typeof e)return[e,t,n];const r={},o={};let a=!1;for(var c in t)t.hasOwnProperty(c)&&(c.startsWith(i)?(o[c.substr(1)]=t[c],a=!0):r[c]=t[c]);if(a){const e=s(o);r.className=r.className?`${r.className} ${e}`:e}return[e,r,n]})}function p(e){if(!h)throw new Error("You need to call registerStilren before using this hook.");return h(e)}p({display:"block",fontWeight:"bold"}),p({clip:"revert",fontSize:"5px",rx:"4"});export{f as createRenderStyle,d as registerStilren,p as useStyle};
//# sourceMappingURL=index.modern.js.map
