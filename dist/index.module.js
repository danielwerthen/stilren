import"@dwerthen/react-extension/react";import{registerExtension as e}from"@dwerthen/react-extension";import{renderDeclarativeRules as t}from"styletron-standard";function n(e){return Reflect.getPrototypeOf(e).constructor.name}const r={};class i{constructor(e,t){const i=`stil-ren-modifier:${n(this)}+${e}`,s=r[i];if(this.value=e,this.type=t,s)return s;r[i]=this}canCombine(e){return!1}combine(e){throw new Error("Cannot combine with "+n(e))}getKey(){return this.value}toString(){return this.getKey()}static combineModifiers(e){return e.reduce((e,t)=>{const n=e[e.length-1];return n&&n.canCombine(t)?[...e.slice(0,e.length-1),n.combine(t)]:[...e,t]},[])}}class s extends i{constructor(e){super(e,"prefix")}canCombine(e){return e instanceof s}combine(e){return this===e?e:new s(`${(this.value<e.value?this:e).value} or ${(this.value<e.value?e:this).value}`)}getKey(){return"@media "+this.value}}class o extends i{constructor(e){super(e,"suffix")}canCombine(e){return e instanceof o}combine(e){const t=e;if(this===t)return t;let n,r;const i=this.value.startsWith(":"),s=t.value.startsWith(":");return i&&s?(n=this.value<t.value?this:t,r=this.value<t.value?t:this):i?(n=t,r=this):s?(n=this,r=t):(n=this.value<t.value?this:t,r=this.value<t.value?t:this),new o(`${n.value}:${r.value}`)}getKey(){return":"+this.value}}function c(e,t){if(!(e instanceof i))throw new Error("Cannot get branch of unknown modifier");const n=e.getKey();return t[n]||(t[n]={}),t[n]}class a{constructor(e={}){this.props=e}set(e,t,n){n.reduce((e,t)=>c(t,e),this.props)[e]=t}getNode(e){if(e.length<1)return this;const t=e.reduce((e,t)=>c(t,e),this.props);return new a(t)}}var u={Active:"active",Checked:"checked",Default:"default",Disabled:"disabled",Empty:"empty",Enabled:"enabled",First:"first",FirstChild:"first-child",FirstOfType:"first-of-type",Fullscreen:"fullscreen",Focus:"focus",Hover:"hover",Indeterminate:"indeterminate",InRange:"in-range",Invalid:"invalid",LastChild:"last-child",LastOfType:"last-of-type",Link:"link",OnlyChild:"only-child",OnlyOfType:"only-of-type",Optional:"optional",OutOfRange:"out-of-range",ReadOnly:"read-only",ReadWrite:"read-write",Required:"required",Scope:"scope",Target:"target",Valid:"valid",Visited:"visited",Before:":before",After:":after"};function l({mediaPrefixes:e={},pseudoSuffixes:n=u,styletron:r}){const c=function(e,t){const n=Object.keys(e),r=Object.keys(t);return function(s){const o={};return s=>(o[s]||(o[s]=function(s){const[o,c]=function t(r){const i=n.find(e=>{return r.length>e.length&&(t=r[e.length])!==t.toLowerCase()&&t===t.toUpperCase()&&r.startsWith(e);var t});if(i){const n=e[i],[s,o]=t(r[i.length].toLowerCase()+r.slice(i.length+1));return[s,[...o,n]]}return[r,[]]}(s),[a,u]=function e(n){const i=r.find(e=>n.length>e.length&&n.endsWith(e));if(i){const r=t[i],[s,o]=e(n.substring(0,n.length-i.length));return[s,[...o,r]]}return[n,[]]}(o);return[a,i.combineModifiers([...c,...u])]}(s)),o[s])}()}(Object.keys(e).reduce((t,n)=>({...t,[n]:new s(e[n])}),{}),Object.keys(n).reduce((e,t)=>({...e,[t]:new o(n[t])}),{}));return function(e){const n=new a;for(var i in e)if(e.hasOwnProperty(i)){const t=e[i],[r,s]=c(i);n.set(r,t,s)}const s=t(n.props,r);return r.renderStyle(s)}}let f=null;function h({mediaPrefixes:t,pseudoSuffixes:n,styletron:r,propPrefix:i="$"}){const s=l({styletron:r,mediaPrefixes:t,pseudoSuffixes:n});return f=s,e(function(e,t){var n=[].slice.call(arguments,2);if("object"!=typeof t||"string"!=typeof e)return[e,t,n];const r={},o={};let c=!1;for(var a in t)t.hasOwnProperty(a)&&(a.startsWith(i)?(o[a.substr(1)]=t[a],c=!0):r[a]=t[a]);if(c){const e=s(o);r.className=r.className?`${r.className} ${e}`:e}return[e,r,n]})}function d(e){if(!f)throw new Error("You need to call registerStilren before using this hook.");return f(e)}d({display:"block",fontWeight:"bold"}),d({clip:"revert",fontSize:"5px",rx:"4"});export{l as createRenderStyle,h as registerStilren,d as useStyle};
//# sourceMappingURL=index.module.js.map
